1. Подключение
    $ npm install motion

2. Чтобы Motion работала в связке с Radix-UI,
 AnimatePresence должен непосредственно оборачивать строку, содержащую условный рендеринг
 (даже если условно отображается библиотечный компонент, например PopoverContent).
 При этом компоненту PopoverContent (Radix-UI) необходимо применить атрибут forceMount,
 который позволяет принудительно отобразить контент и применить анимацию Motion.
 motion.[div] - компоненты при этом могут располагаться глубже в дереве компонентов.

3. Обрабатывать "Клики" по PopoverTrigger не требуется.
"Клики" по PopoverTrigger обрабатываются Popover "под капотом",
При этом изменяется внутреннее состояние Popover (open), привязаться к нему можно с помощью
 атрибута onOpenChange для изменения состояния, которое будет использовано при условном рендеринге контента.
    onOpenChange - это обработчик событий, который вызывается, когда меняется открытое состояниеPopover,
    т.е. сначала "под капотом" изменяется состояние Popover, потом вызывается onOpenChange,
    передав которому setState, можно изменить состояние,
    которое используется в условном рендеринге контента.

    <Popover open={open} onOpenChange={setOpen}>
          <PopoverTrigger>
          </PopoverTrigger>
           <AnimatePresence>
               {open && (
                         <PopoverContent
                            forceMount
                         />)

