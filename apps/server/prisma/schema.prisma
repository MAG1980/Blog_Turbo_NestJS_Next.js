// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  bio       String?
  avatar    String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts    Post[]
  comments Comment[]
  likes    Like[]

  @@map("users")
}

model Post {
  id        Int      @id @default(autoincrement())
  slug      String?  @unique
  title     String
  content   String
  thumbnail String?
  published Boolean
  authorId  Int      @map("author_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments Comment[]
  author   User      @relation(fields: [authorId], references: [id])
  tags     Tag[]     @relation("posts_tags")
  likes    Like[]

  @@map("posts")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int      @map("post_id")
  authorId  Int      @map("author_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post   Post @relation(fields: [postId], references: [id])
  author User @relation(fields: [id], references: [id])

  @@map("comments")
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique

  posts Post[] @relation("posts_tags")

  @@map("tags")
}

model Like {
  id     Int @id @default(autoincrement())
  userId Int @map("user_id")
  postId Int @map("post_id")

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  @@map("likes")
}
